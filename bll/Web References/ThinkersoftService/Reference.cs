//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace bll.ThinkersoftService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExcuteQueryTexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteQuerySqlServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteGerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SQLSExcuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteQueryExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteQueryExTexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteOperationTexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteOperationExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteOperationExTexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDataBaseBLOBOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDataBaseBLOBTexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteProcOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteProcTexOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountTexOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountSqlServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateErrorDOCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateErrorDOCTexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteProcEXOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteProcEXTexOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteProcEXTexlockOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSMSStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFilePathHeaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVersionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVersionInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUpdateFileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUpdateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteSDPQOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientStaticExOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHashcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback HeartBitOperationCompleted;
        
        private System.Threading.SendOrPostCallback UPLOADFILEEXOperationCompleted;
        
        private System.Threading.SendOrPostCallback UPLOADFILEOperationCompleted;
        
        private System.Threading.SendOrPostCallback downFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback PRINTBINUPLOADOperationCompleted;
        
        private System.Threading.SendOrPostCallback PRINTBINDOWNLOADOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisteCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientRegisteCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getpchOperationCompleted;
        
        private System.Threading.SendOrPostCallback getyeOperationCompleted;
        
        private System.Threading.SendOrPostCallback submsgtoserverOperationCompleted;
        
        private System.Threading.SendOrPostCallback getpchDirectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getyeDirectOperationCompleted;
        
        private System.Threading.SendOrPostCallback submsgtoserverDirectOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::bll.Properties.Settings.Default.bll_ThinkersoftService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExcuteQueryTexCompletedEventHandler ExcuteQueryTexCompleted;
        
        /// <remarks/>
        public event ExcuteQuerySqlServerCompletedEventHandler ExcuteQuerySqlServerCompleted;
        
        /// <remarks/>
        public event ExcuteGerCompletedEventHandler ExcuteGerCompleted;
        
        /// <remarks/>
        public event SQLSExcuteCompletedEventHandler SQLSExcuteCompleted;
        
        /// <remarks/>
        public event ExcuteQueryExCompletedEventHandler ExcuteQueryExCompleted;
        
        /// <remarks/>
        public event ExcuteQueryExTexCompletedEventHandler ExcuteQueryExTexCompleted;
        
        /// <remarks/>
        public event ExcuteOperationCompletedEventHandler ExcuteOperationCompleted;
        
        /// <remarks/>
        public event ExcuteOperationTexCompletedEventHandler ExcuteOperationTexCompleted;
        
        /// <remarks/>
        public event ExcuteOperationExCompletedEventHandler ExcuteOperationExCompleted;
        
        /// <remarks/>
        public event ExcuteOperationExTexCompletedEventHandler ExcuteOperationExTexCompleted;
        
        /// <remarks/>
        public event ExecuteDataBaseBLOBCompletedEventHandler ExecuteDataBaseBLOBCompleted;
        
        /// <remarks/>
        public event ExecuteDataBaseBLOBTexCompletedEventHandler ExecuteDataBaseBLOBTexCompleted;
        
        /// <remarks/>
        public event ExcuteProcCompletedEventHandler ExcuteProcCompleted;
        
        /// <remarks/>
        public event ExcuteProcTexCompletedEventHandler ExcuteProcTexCompleted;
        
        /// <remarks/>
        public event GetCountCompletedEventHandler GetCountCompleted;
        
        /// <remarks/>
        public event GetCountTexCompletedEventHandler GetCountTexCompleted;
        
        /// <remarks/>
        public event GetCountSqlServerCompletedEventHandler GetCountSqlServerCompleted;
        
        /// <remarks/>
        public event CreateErrorDOCCompletedEventHandler CreateErrorDOCCompleted;
        
        /// <remarks/>
        public event CreateErrorDOCTexCompletedEventHandler CreateErrorDOCTexCompleted;
        
        /// <remarks/>
        public event ExcuteProcEXCompletedEventHandler ExcuteProcEXCompleted;
        
        /// <remarks/>
        public event ExcuteProcEXTexCompletedEventHandler ExcuteProcEXTexCompleted;
        
        /// <remarks/>
        public event ExcuteProcEXTexlockCompletedEventHandler ExcuteProcEXTexlockCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event ExcuteThreadCompletedEventHandler ExcuteThreadCompleted;
        
        /// <remarks/>
        public event getSMSStockCompletedEventHandler getSMSStockCompleted;
        
        /// <remarks/>
        public event FetchSMSCompletedEventHandler FetchSMSCompleted;
        
        /// <remarks/>
        public event getFilePathHeaCompletedEventHandler getFilePathHeaCompleted;
        
        /// <remarks/>
        public event getVersionInfoCompletedEventHandler getVersionInfoCompleted;
        
        /// <remarks/>
        public event UpdateVersionInfoCompletedEventHandler UpdateVersionInfoCompleted;
        
        /// <remarks/>
        public event getUpdateFileListCompletedEventHandler getUpdateFileListCompleted;
        
        /// <remarks/>
        public event CreateUpdateFolderCompletedEventHandler CreateUpdateFolderCompleted;
        
        /// <remarks/>
        public event InCodeCompletedEventHandler InCodeCompleted;
        
        /// <remarks/>
        public event UnCodeCompletedEventHandler UnCodeCompleted;
        
        /// <remarks/>
        public event ExcuteSDPQCompletedEventHandler ExcuteSDPQCompleted;
        
        /// <remarks/>
        public event ClientStaticExCompletedEventHandler ClientStaticExCompleted;
        
        /// <remarks/>
        public event getDataCompletedEventHandler getDataCompleted;
        
        /// <remarks/>
        public event getHashcodeCompletedEventHandler getHashcodeCompleted;
        
        /// <remarks/>
        public event HeartBitCompletedEventHandler HeartBitCompleted;
        
        /// <remarks/>
        public event UPLOADFILEEXCompletedEventHandler UPLOADFILEEXCompleted;
        
        /// <remarks/>
        public event UPLOADFILECompletedEventHandler UPLOADFILECompleted;
        
        /// <remarks/>
        public event downFileCompletedEventHandler downFileCompleted;
        
        /// <remarks/>
        public event PRINTBINUPLOADCompletedEventHandler PRINTBINUPLOADCompleted;
        
        /// <remarks/>
        public event PRINTBINDOWNLOADCompletedEventHandler PRINTBINDOWNLOADCompleted;
        
        /// <remarks/>
        public event RegisteCheckCompletedEventHandler RegisteCheckCompleted;
        
        /// <remarks/>
        public event getClientCountCompletedEventHandler getClientCountCompleted;
        
        /// <remarks/>
        public event getClientRegisteCountCompletedEventHandler getClientRegisteCountCompleted;
        
        /// <remarks/>
        public event getpchCompletedEventHandler getpchCompleted;
        
        /// <remarks/>
        public event getyeCompletedEventHandler getyeCompleted;
        
        /// <remarks/>
        public event submsgtoserverCompletedEventHandler submsgtoserverCompleted;
        
        /// <remarks/>
        public event getpchDirectCompletedEventHandler getpchDirectCompleted;
        
        /// <remarks/>
        public event getyeDirectCompletedEventHandler getyeDirectCompleted;
        
        /// <remarks/>
        public event submsgtoserverDirectCompletedEventHandler submsgtoserverDirectCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteQueryTex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExcuteQueryTex(string sql, string win, string method, string operatename, string logonPerson) {
            object[] results = this.Invoke("ExcuteQueryTex", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteQueryTexAsync(string sql, string win, string method, string operatename, string logonPerson) {
            this.ExcuteQueryTexAsync(sql, win, method, operatename, logonPerson, null);
        }
        
        /// <remarks/>
        public void ExcuteQueryTexAsync(string sql, string win, string method, string operatename, string logonPerson, object userState) {
            if ((this.ExcuteQueryTexOperationCompleted == null)) {
                this.ExcuteQueryTexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteQueryTexOperationCompleted);
            }
            this.InvokeAsync("ExcuteQueryTex", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson}, this.ExcuteQueryTexOperationCompleted, userState);
        }
        
        private void OnExcuteQueryTexOperationCompleted(object arg) {
            if ((this.ExcuteQueryTexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteQueryTexCompleted(this, new ExcuteQueryTexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteQuerySqlServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExcuteQuerySqlServer(string sql, string win, string method, string operatename, string logonPerson) {
            object[] results = this.Invoke("ExcuteQuerySqlServer", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteQuerySqlServerAsync(string sql, string win, string method, string operatename, string logonPerson) {
            this.ExcuteQuerySqlServerAsync(sql, win, method, operatename, logonPerson, null);
        }
        
        /// <remarks/>
        public void ExcuteQuerySqlServerAsync(string sql, string win, string method, string operatename, string logonPerson, object userState) {
            if ((this.ExcuteQuerySqlServerOperationCompleted == null)) {
                this.ExcuteQuerySqlServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteQuerySqlServerOperationCompleted);
            }
            this.InvokeAsync("ExcuteQuerySqlServer", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson}, this.ExcuteQuerySqlServerOperationCompleted, userState);
        }
        
        private void OnExcuteQuerySqlServerOperationCompleted(object arg) {
            if ((this.ExcuteQuerySqlServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteQuerySqlServerCompleted(this, new ExcuteQuerySqlServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteGer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ExcuteGer(string sql, string win, string method, string operatename, string logonPerson) {
            object[] results = this.Invoke("ExcuteGer", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteGerAsync(string sql, string win, string method, string operatename, string logonPerson) {
            this.ExcuteGerAsync(sql, win, method, operatename, logonPerson, null);
        }
        
        /// <remarks/>
        public void ExcuteGerAsync(string sql, string win, string method, string operatename, string logonPerson, object userState) {
            if ((this.ExcuteGerOperationCompleted == null)) {
                this.ExcuteGerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteGerOperationCompleted);
            }
            this.InvokeAsync("ExcuteGer", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson}, this.ExcuteGerOperationCompleted, userState);
        }
        
        private void OnExcuteGerOperationCompleted(object arg) {
            if ((this.ExcuteGerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteGerCompleted(this, new ExcuteGerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SQLSExcute", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SQLSExcute(string sql, string win, string method, string operatename, string logonPerson) {
            object[] results = this.Invoke("SQLSExcute", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SQLSExcuteAsync(string sql, string win, string method, string operatename, string logonPerson) {
            this.SQLSExcuteAsync(sql, win, method, operatename, logonPerson, null);
        }
        
        /// <remarks/>
        public void SQLSExcuteAsync(string sql, string win, string method, string operatename, string logonPerson, object userState) {
            if ((this.SQLSExcuteOperationCompleted == null)) {
                this.SQLSExcuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSQLSExcuteOperationCompleted);
            }
            this.InvokeAsync("SQLSExcute", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson}, this.SQLSExcuteOperationCompleted, userState);
        }
        
        private void OnSQLSExcuteOperationCompleted(object arg) {
            if ((this.SQLSExcuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SQLSExcuteCompleted(this, new SQLSExcuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteQueryEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ExcuteQueryEx(string procName, System.Data.DataTable pdt, string win, string method, string operatename) {
            object[] results = this.Invoke("ExcuteQueryEx", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteQueryExAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename) {
            this.ExcuteQueryExAsync(procName, pdt, win, method, operatename, null);
        }
        
        /// <remarks/>
        public void ExcuteQueryExAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, object userState) {
            if ((this.ExcuteQueryExOperationCompleted == null)) {
                this.ExcuteQueryExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteQueryExOperationCompleted);
            }
            this.InvokeAsync("ExcuteQueryEx", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename}, this.ExcuteQueryExOperationCompleted, userState);
        }
        
        private void OnExcuteQueryExOperationCompleted(object arg) {
            if ((this.ExcuteQueryExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteQueryExCompleted(this, new ExcuteQueryExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteQueryExTex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ExcuteQueryExTex(string procName, System.Data.DataTable pdt, string win, string method, string operatename, string logonPerson) {
            object[] results = this.Invoke("ExcuteQueryExTex", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        logonPerson});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteQueryExTexAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, string logonPerson) {
            this.ExcuteQueryExTexAsync(procName, pdt, win, method, operatename, logonPerson, null);
        }
        
        /// <remarks/>
        public void ExcuteQueryExTexAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, string logonPerson, object userState) {
            if ((this.ExcuteQueryExTexOperationCompleted == null)) {
                this.ExcuteQueryExTexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteQueryExTexOperationCompleted);
            }
            this.InvokeAsync("ExcuteQueryExTex", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        logonPerson}, this.ExcuteQueryExTexOperationCompleted, userState);
        }
        
        private void OnExcuteQueryExTexOperationCompleted(object arg) {
            if ((this.ExcuteQueryExTexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteQueryExTexCompleted(this, new ExcuteQueryExTexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcuteOperation(string sql, string win, string method, string operatename) {
            object[] results = this.Invoke("ExcuteOperation", new object[] {
                        sql,
                        win,
                        method,
                        operatename});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteOperationAsync(string sql, string win, string method, string operatename) {
            this.ExcuteOperationAsync(sql, win, method, operatename, null);
        }
        
        /// <remarks/>
        public void ExcuteOperationAsync(string sql, string win, string method, string operatename, object userState) {
            if ((this.ExcuteOperationOperationCompleted == null)) {
                this.ExcuteOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteOperationOperationCompleted);
            }
            this.InvokeAsync("ExcuteOperation", new object[] {
                        sql,
                        win,
                        method,
                        operatename}, this.ExcuteOperationOperationCompleted, userState);
        }
        
        private void OnExcuteOperationOperationCompleted(object arg) {
            if ((this.ExcuteOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteOperationCompleted(this, new ExcuteOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteOperationTex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcuteOperationTex(string sql, string win, string method, string operatename, string logonPerson) {
            object[] results = this.Invoke("ExcuteOperationTex", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteOperationTexAsync(string sql, string win, string method, string operatename, string logonPerson) {
            this.ExcuteOperationTexAsync(sql, win, method, operatename, logonPerson, null);
        }
        
        /// <remarks/>
        public void ExcuteOperationTexAsync(string sql, string win, string method, string operatename, string logonPerson, object userState) {
            if ((this.ExcuteOperationTexOperationCompleted == null)) {
                this.ExcuteOperationTexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteOperationTexOperationCompleted);
            }
            this.InvokeAsync("ExcuteOperationTex", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonPerson}, this.ExcuteOperationTexOperationCompleted, userState);
        }
        
        private void OnExcuteOperationTexOperationCompleted(object arg) {
            if ((this.ExcuteOperationTexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteOperationTexCompleted(this, new ExcuteOperationTexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteOperationEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcuteOperationEx(string sql, string[] indexPname, string[] vals, string win, string method, string operatename) {
            object[] results = this.Invoke("ExcuteOperationEx", new object[] {
                        sql,
                        indexPname,
                        vals,
                        win,
                        method,
                        operatename});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteOperationExAsync(string sql, string[] indexPname, string[] vals, string win, string method, string operatename) {
            this.ExcuteOperationExAsync(sql, indexPname, vals, win, method, operatename, null);
        }
        
        /// <remarks/>
        public void ExcuteOperationExAsync(string sql, string[] indexPname, string[] vals, string win, string method, string operatename, object userState) {
            if ((this.ExcuteOperationExOperationCompleted == null)) {
                this.ExcuteOperationExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteOperationExOperationCompleted);
            }
            this.InvokeAsync("ExcuteOperationEx", new object[] {
                        sql,
                        indexPname,
                        vals,
                        win,
                        method,
                        operatename}, this.ExcuteOperationExOperationCompleted, userState);
        }
        
        private void OnExcuteOperationExOperationCompleted(object arg) {
            if ((this.ExcuteOperationExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteOperationExCompleted(this, new ExcuteOperationExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteOperationExTex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcuteOperationExTex(string sql, string[] indexPname, string[] vals, string win, string method, string operatename, string logonPerson) {
            object[] results = this.Invoke("ExcuteOperationExTex", new object[] {
                        sql,
                        indexPname,
                        vals,
                        win,
                        method,
                        operatename,
                        logonPerson});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteOperationExTexAsync(string sql, string[] indexPname, string[] vals, string win, string method, string operatename, string logonPerson) {
            this.ExcuteOperationExTexAsync(sql, indexPname, vals, win, method, operatename, logonPerson, null);
        }
        
        /// <remarks/>
        public void ExcuteOperationExTexAsync(string sql, string[] indexPname, string[] vals, string win, string method, string operatename, string logonPerson, object userState) {
            if ((this.ExcuteOperationExTexOperationCompleted == null)) {
                this.ExcuteOperationExTexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteOperationExTexOperationCompleted);
            }
            this.InvokeAsync("ExcuteOperationExTex", new object[] {
                        sql,
                        indexPname,
                        vals,
                        win,
                        method,
                        operatename,
                        logonPerson}, this.ExcuteOperationExTexOperationCompleted, userState);
        }
        
        private void OnExcuteOperationExTexOperationCompleted(object arg) {
            if ((this.ExcuteOperationExTexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteOperationExTexCompleted(this, new ExcuteOperationExTexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteDataBaseBLOB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteDataBaseBLOB(string sql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string win, string method, string operatename) {
            this.Invoke("ExecuteDataBaseBLOB", new object[] {
                        sql,
                        data,
                        win,
                        method,
                        operatename});
        }
        
        /// <remarks/>
        public void ExecuteDataBaseBLOBAsync(string sql, byte[] data, string win, string method, string operatename) {
            this.ExecuteDataBaseBLOBAsync(sql, data, win, method, operatename, null);
        }
        
        /// <remarks/>
        public void ExecuteDataBaseBLOBAsync(string sql, byte[] data, string win, string method, string operatename, object userState) {
            if ((this.ExecuteDataBaseBLOBOperationCompleted == null)) {
                this.ExecuteDataBaseBLOBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDataBaseBLOBOperationCompleted);
            }
            this.InvokeAsync("ExecuteDataBaseBLOB", new object[] {
                        sql,
                        data,
                        win,
                        method,
                        operatename}, this.ExecuteDataBaseBLOBOperationCompleted, userState);
        }
        
        private void OnExecuteDataBaseBLOBOperationCompleted(object arg) {
            if ((this.ExecuteDataBaseBLOBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDataBaseBLOBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteDataBaseBLOBTex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteDataBaseBLOBTex(string sql, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string win, string method, string operatename, string logonName) {
            this.Invoke("ExecuteDataBaseBLOBTex", new object[] {
                        sql,
                        data,
                        win,
                        method,
                        operatename,
                        logonName});
        }
        
        /// <remarks/>
        public void ExecuteDataBaseBLOBTexAsync(string sql, byte[] data, string win, string method, string operatename, string logonName) {
            this.ExecuteDataBaseBLOBTexAsync(sql, data, win, method, operatename, logonName, null);
        }
        
        /// <remarks/>
        public void ExecuteDataBaseBLOBTexAsync(string sql, byte[] data, string win, string method, string operatename, string logonName, object userState) {
            if ((this.ExecuteDataBaseBLOBTexOperationCompleted == null)) {
                this.ExecuteDataBaseBLOBTexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDataBaseBLOBTexOperationCompleted);
            }
            this.InvokeAsync("ExecuteDataBaseBLOBTex", new object[] {
                        sql,
                        data,
                        win,
                        method,
                        operatename,
                        logonName}, this.ExecuteDataBaseBLOBTexOperationCompleted, userState);
        }
        
        private void OnExecuteDataBaseBLOBTexOperationCompleted(object arg) {
            if ((this.ExecuteDataBaseBLOBTexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDataBaseBLOBTexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteProc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcuteProc(string procName, System.Data.DataTable pdt, string win, string method, string operatename) {
            object[] results = this.Invoke("ExcuteProc", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteProcAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename) {
            this.ExcuteProcAsync(procName, pdt, win, method, operatename, null);
        }
        
        /// <remarks/>
        public void ExcuteProcAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, object userState) {
            if ((this.ExcuteProcOperationCompleted == null)) {
                this.ExcuteProcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteProcOperationCompleted);
            }
            this.InvokeAsync("ExcuteProc", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename}, this.ExcuteProcOperationCompleted, userState);
        }
        
        private void OnExcuteProcOperationCompleted(object arg) {
            if ((this.ExcuteProcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteProcCompleted(this, new ExcuteProcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteProcTex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcuteProcTex(string procName, System.Data.DataTable pdt, string win, string method, string operatename, string logonName) {
            object[] results = this.Invoke("ExcuteProcTex", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        logonName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteProcTexAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, string logonName) {
            this.ExcuteProcTexAsync(procName, pdt, win, method, operatename, logonName, null);
        }
        
        /// <remarks/>
        public void ExcuteProcTexAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, string logonName, object userState) {
            if ((this.ExcuteProcTexOperationCompleted == null)) {
                this.ExcuteProcTexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteProcTexOperationCompleted);
            }
            this.InvokeAsync("ExcuteProcTex", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        logonName}, this.ExcuteProcTexOperationCompleted, userState);
        }
        
        private void OnExcuteProcTexOperationCompleted(object arg) {
            if ((this.ExcuteProcTexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteProcTexCompleted(this, new ExcuteProcTexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCount(string sql, string win, string method, string operatename) {
            object[] results = this.Invoke("GetCount", new object[] {
                        sql,
                        win,
                        method,
                        operatename});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountAsync(string sql, string win, string method, string operatename) {
            this.GetCountAsync(sql, win, method, operatename, null);
        }
        
        /// <remarks/>
        public void GetCountAsync(string sql, string win, string method, string operatename, object userState) {
            if ((this.GetCountOperationCompleted == null)) {
                this.GetCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountOperationCompleted);
            }
            this.InvokeAsync("GetCount", new object[] {
                        sql,
                        win,
                        method,
                        operatename}, this.GetCountOperationCompleted, userState);
        }
        
        private void OnGetCountOperationCompleted(object arg) {
            if ((this.GetCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountCompleted(this, new GetCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountTex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCountTex(string sql, string win, string method, string operatename, string logonName) {
            object[] results = this.Invoke("GetCountTex", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountTexAsync(string sql, string win, string method, string operatename, string logonName) {
            this.GetCountTexAsync(sql, win, method, operatename, logonName, null);
        }
        
        /// <remarks/>
        public void GetCountTexAsync(string sql, string win, string method, string operatename, string logonName, object userState) {
            if ((this.GetCountTexOperationCompleted == null)) {
                this.GetCountTexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountTexOperationCompleted);
            }
            this.InvokeAsync("GetCountTex", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonName}, this.GetCountTexOperationCompleted, userState);
        }
        
        private void OnGetCountTexOperationCompleted(object arg) {
            if ((this.GetCountTexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountTexCompleted(this, new GetCountTexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountSqlServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCountSqlServer(string sql, string win, string method, string operatename, string logonName) {
            object[] results = this.Invoke("GetCountSqlServer", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountSqlServerAsync(string sql, string win, string method, string operatename, string logonName) {
            this.GetCountSqlServerAsync(sql, win, method, operatename, logonName, null);
        }
        
        /// <remarks/>
        public void GetCountSqlServerAsync(string sql, string win, string method, string operatename, string logonName, object userState) {
            if ((this.GetCountSqlServerOperationCompleted == null)) {
                this.GetCountSqlServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountSqlServerOperationCompleted);
            }
            this.InvokeAsync("GetCountSqlServer", new object[] {
                        sql,
                        win,
                        method,
                        operatename,
                        logonName}, this.GetCountSqlServerOperationCompleted, userState);
        }
        
        private void OnGetCountSqlServerOperationCompleted(object arg) {
            if ((this.GetCountSqlServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountSqlServerCompleted(this, new GetCountSqlServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateErrorDOC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateErrorDOC(string xmlSTR) {
            object[] results = this.Invoke("CreateErrorDOC", new object[] {
                        xmlSTR});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateErrorDOCAsync(string xmlSTR) {
            this.CreateErrorDOCAsync(xmlSTR, null);
        }
        
        /// <remarks/>
        public void CreateErrorDOCAsync(string xmlSTR, object userState) {
            if ((this.CreateErrorDOCOperationCompleted == null)) {
                this.CreateErrorDOCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateErrorDOCOperationCompleted);
            }
            this.InvokeAsync("CreateErrorDOC", new object[] {
                        xmlSTR}, this.CreateErrorDOCOperationCompleted, userState);
        }
        
        private void OnCreateErrorDOCOperationCompleted(object arg) {
            if ((this.CreateErrorDOCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateErrorDOCCompleted(this, new CreateErrorDOCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateErrorDOCTex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateErrorDOCTex(string xmlSTR, string operatorName) {
            object[] results = this.Invoke("CreateErrorDOCTex", new object[] {
                        xmlSTR,
                        operatorName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateErrorDOCTexAsync(string xmlSTR, string operatorName) {
            this.CreateErrorDOCTexAsync(xmlSTR, operatorName, null);
        }
        
        /// <remarks/>
        public void CreateErrorDOCTexAsync(string xmlSTR, string operatorName, object userState) {
            if ((this.CreateErrorDOCTexOperationCompleted == null)) {
                this.CreateErrorDOCTexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateErrorDOCTexOperationCompleted);
            }
            this.InvokeAsync("CreateErrorDOCTex", new object[] {
                        xmlSTR,
                        operatorName}, this.CreateErrorDOCTexOperationCompleted, userState);
        }
        
        private void OnCreateErrorDOCTexOperationCompleted(object arg) {
            if ((this.CreateErrorDOCTexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateErrorDOCTexCompleted(this, new CreateErrorDOCTexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteProcEX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExcuteProcEX(string procName, System.Data.DataTable pdt, string win, string method, string operatename, int outIndex) {
            object[] results = this.Invoke("ExcuteProcEX", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        outIndex});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteProcEXAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, int outIndex) {
            this.ExcuteProcEXAsync(procName, pdt, win, method, operatename, outIndex, null);
        }
        
        /// <remarks/>
        public void ExcuteProcEXAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, int outIndex, object userState) {
            if ((this.ExcuteProcEXOperationCompleted == null)) {
                this.ExcuteProcEXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteProcEXOperationCompleted);
            }
            this.InvokeAsync("ExcuteProcEX", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        outIndex}, this.ExcuteProcEXOperationCompleted, userState);
        }
        
        private void OnExcuteProcEXOperationCompleted(object arg) {
            if ((this.ExcuteProcEXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteProcEXCompleted(this, new ExcuteProcEXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteProcEXTex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExcuteProcEXTex(string procName, System.Data.DataTable pdt, string win, string method, string operatename, int outIndex, string logonName) {
            object[] results = this.Invoke("ExcuteProcEXTex", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        outIndex,
                        logonName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteProcEXTexAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, int outIndex, string logonName) {
            this.ExcuteProcEXTexAsync(procName, pdt, win, method, operatename, outIndex, logonName, null);
        }
        
        /// <remarks/>
        public void ExcuteProcEXTexAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, int outIndex, string logonName, object userState) {
            if ((this.ExcuteProcEXTexOperationCompleted == null)) {
                this.ExcuteProcEXTexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteProcEXTexOperationCompleted);
            }
            this.InvokeAsync("ExcuteProcEXTex", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        outIndex,
                        logonName}, this.ExcuteProcEXTexOperationCompleted, userState);
        }
        
        private void OnExcuteProcEXTexOperationCompleted(object arg) {
            if ((this.ExcuteProcEXTexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteProcEXTexCompleted(this, new ExcuteProcEXTexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteProcEXTexlock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExcuteProcEXTexlock(string procName, System.Data.DataTable pdt, string win, string method, string operatename, int outIndex, string logonName, int islock) {
            object[] results = this.Invoke("ExcuteProcEXTexlock", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        outIndex,
                        logonName,
                        islock});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteProcEXTexlockAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, int outIndex, string logonName, int islock) {
            this.ExcuteProcEXTexlockAsync(procName, pdt, win, method, operatename, outIndex, logonName, islock, null);
        }
        
        /// <remarks/>
        public void ExcuteProcEXTexlockAsync(string procName, System.Data.DataTable pdt, string win, string method, string operatename, int outIndex, string logonName, int islock, object userState) {
            if ((this.ExcuteProcEXTexlockOperationCompleted == null)) {
                this.ExcuteProcEXTexlockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteProcEXTexlockOperationCompleted);
            }
            this.InvokeAsync("ExcuteProcEXTexlock", new object[] {
                        procName,
                        pdt,
                        win,
                        method,
                        operatename,
                        outIndex,
                        logonName,
                        islock}, this.ExcuteProcEXTexlockOperationCompleted, userState);
        }
        
        private void OnExcuteProcEXTexlockOperationCompleted(object arg) {
            if ((this.ExcuteProcEXTexlockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteProcEXTexlockCompleted(this, new ExcuteProcEXTexlockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFile(string fileServerPath) {
            object[] results = this.Invoke("DeleteFile", new object[] {
                        fileServerPath});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string fileServerPath) {
            this.DeleteFileAsync(fileServerPath, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(string fileServerPath, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        fileServerPath}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteThread", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExcuteThread() {
            this.Invoke("ExcuteThread", new object[0]);
        }
        
        /// <remarks/>
        public void ExcuteThreadAsync() {
            this.ExcuteThreadAsync(null);
        }
        
        /// <remarks/>
        public void ExcuteThreadAsync(object userState) {
            if ((this.ExcuteThreadOperationCompleted == null)) {
                this.ExcuteThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteThreadOperationCompleted);
            }
            this.InvokeAsync("ExcuteThread", new object[0], this.ExcuteThreadOperationCompleted, userState);
        }
        
        private void OnExcuteThreadOperationCompleted(object arg) {
            if ((this.ExcuteThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteThreadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSMSStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getSMSStock() {
            object[] results = this.Invoke("getSMSStock", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSMSStockAsync() {
            this.getSMSStockAsync(null);
        }
        
        /// <remarks/>
        public void getSMSStockAsync(object userState) {
            if ((this.getSMSStockOperationCompleted == null)) {
                this.getSMSStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSMSStockOperationCompleted);
            }
            this.InvokeAsync("getSMSStock", new object[0], this.getSMSStockOperationCompleted, userState);
        }
        
        private void OngetSMSStockOperationCompleted(object arg) {
            if ((this.getSMSStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSMSStockCompleted(this, new getSMSStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FetchSMS() {
            this.Invoke("FetchSMS", new object[0]);
        }
        
        /// <remarks/>
        public void FetchSMSAsync() {
            this.FetchSMSAsync(null);
        }
        
        /// <remarks/>
        public void FetchSMSAsync(object userState) {
            if ((this.FetchSMSOperationCompleted == null)) {
                this.FetchSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchSMSOperationCompleted);
            }
            this.InvokeAsync("FetchSMS", new object[0], this.FetchSMSOperationCompleted, userState);
        }
        
        private void OnFetchSMSOperationCompleted(object arg) {
            if ((this.FetchSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchSMSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFilePathHea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFilePathHea() {
            object[] results = this.Invoke("getFilePathHea", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFilePathHeaAsync() {
            this.getFilePathHeaAsync(null);
        }
        
        /// <remarks/>
        public void getFilePathHeaAsync(object userState) {
            if ((this.getFilePathHeaOperationCompleted == null)) {
                this.getFilePathHeaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFilePathHeaOperationCompleted);
            }
            this.InvokeAsync("getFilePathHea", new object[0], this.getFilePathHeaOperationCompleted, userState);
        }
        
        private void OngetFilePathHeaOperationCompleted(object arg) {
            if ((this.getFilePathHeaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFilePathHeaCompleted(this, new getFilePathHeaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getVersionInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getVersionInfo() {
            object[] results = this.Invoke("getVersionInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getVersionInfoAsync() {
            this.getVersionInfoAsync(null);
        }
        
        /// <remarks/>
        public void getVersionInfoAsync(object userState) {
            if ((this.getVersionInfoOperationCompleted == null)) {
                this.getVersionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVersionInfoOperationCompleted);
            }
            this.InvokeAsync("getVersionInfo", new object[0], this.getVersionInfoOperationCompleted, userState);
        }
        
        private void OngetVersionInfoOperationCompleted(object arg) {
            if ((this.getVersionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVersionInfoCompleted(this, new getVersionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateVersionInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateVersionInfo(string version) {
            object[] results = this.Invoke("UpdateVersionInfo", new object[] {
                        version});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateVersionInfoAsync(string version) {
            this.UpdateVersionInfoAsync(version, null);
        }
        
        /// <remarks/>
        public void UpdateVersionInfoAsync(string version, object userState) {
            if ((this.UpdateVersionInfoOperationCompleted == null)) {
                this.UpdateVersionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVersionInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateVersionInfo", new object[] {
                        version}, this.UpdateVersionInfoOperationCompleted, userState);
        }
        
        private void OnUpdateVersionInfoOperationCompleted(object arg) {
            if ((this.UpdateVersionInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVersionInfoCompleted(this, new UpdateVersionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUpdateFileList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getUpdateFileList(string version) {
            object[] results = this.Invoke("getUpdateFileList", new object[] {
                        version});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getUpdateFileListAsync(string version) {
            this.getUpdateFileListAsync(version, null);
        }
        
        /// <remarks/>
        public void getUpdateFileListAsync(string version, object userState) {
            if ((this.getUpdateFileListOperationCompleted == null)) {
                this.getUpdateFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUpdateFileListOperationCompleted);
            }
            this.InvokeAsync("getUpdateFileList", new object[] {
                        version}, this.getUpdateFileListOperationCompleted, userState);
        }
        
        private void OngetUpdateFileListOperationCompleted(object arg) {
            if ((this.getUpdateFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUpdateFileListCompleted(this, new getUpdateFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUpdateFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateUpdateFolder(string version, string xmlStr) {
            object[] results = this.Invoke("CreateUpdateFolder", new object[] {
                        version,
                        xmlStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUpdateFolderAsync(string version, string xmlStr) {
            this.CreateUpdateFolderAsync(version, xmlStr, null);
        }
        
        /// <remarks/>
        public void CreateUpdateFolderAsync(string version, string xmlStr, object userState) {
            if ((this.CreateUpdateFolderOperationCompleted == null)) {
                this.CreateUpdateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUpdateFolderOperationCompleted);
            }
            this.InvokeAsync("CreateUpdateFolder", new object[] {
                        version,
                        xmlStr}, this.CreateUpdateFolderOperationCompleted, userState);
        }
        
        private void OnCreateUpdateFolderOperationCompleted(object arg) {
            if ((this.CreateUpdateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUpdateFolderCompleted(this, new CreateUpdateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InCode(string str) {
            object[] results = this.Invoke("InCode", new object[] {
                        str});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InCodeAsync(string str) {
            this.InCodeAsync(str, null);
        }
        
        /// <remarks/>
        public void InCodeAsync(string str, object userState) {
            if ((this.InCodeOperationCompleted == null)) {
                this.InCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInCodeOperationCompleted);
            }
            this.InvokeAsync("InCode", new object[] {
                        str}, this.InCodeOperationCompleted, userState);
        }
        
        private void OnInCodeOperationCompleted(object arg) {
            if ((this.InCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InCodeCompleted(this, new InCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnCode(string str) {
            object[] results = this.Invoke("UnCode", new object[] {
                        str});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnCodeAsync(string str) {
            this.UnCodeAsync(str, null);
        }
        
        /// <remarks/>
        public void UnCodeAsync(string str, object userState) {
            if ((this.UnCodeOperationCompleted == null)) {
                this.UnCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnCodeOperationCompleted);
            }
            this.InvokeAsync("UnCode", new object[] {
                        str}, this.UnCodeOperationCompleted, userState);
        }
        
        private void OnUnCodeOperationCompleted(object arg) {
            if ((this.UnCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnCodeCompleted(this, new UnCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteSDPQ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExcuteSDPQ() {
            this.Invoke("ExcuteSDPQ", new object[0]);
        }
        
        /// <remarks/>
        public void ExcuteSDPQAsync() {
            this.ExcuteSDPQAsync(null);
        }
        
        /// <remarks/>
        public void ExcuteSDPQAsync(object userState) {
            if ((this.ExcuteSDPQOperationCompleted == null)) {
                this.ExcuteSDPQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteSDPQOperationCompleted);
            }
            this.InvokeAsync("ExcuteSDPQ", new object[0], this.ExcuteSDPQOperationCompleted, userState);
        }
        
        private void OnExcuteSDPQOperationCompleted(object arg) {
            if ((this.ExcuteSDPQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteSDPQCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClientStaticEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClientStaticEx() {
            this.Invoke("ClientStaticEx", new object[0]);
        }
        
        /// <remarks/>
        public void ClientStaticExAsync() {
            this.ClientStaticExAsync(null);
        }
        
        /// <remarks/>
        public void ClientStaticExAsync(object userState) {
            if ((this.ClientStaticExOperationCompleted == null)) {
                this.ClientStaticExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientStaticExOperationCompleted);
            }
            this.InvokeAsync("ClientStaticEx", new object[0], this.ClientStaticExOperationCompleted, userState);
        }
        
        private void OnClientStaticExOperationCompleted(object arg) {
            if ((this.ClientStaticExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientStaticExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] getData() {
            object[] results = this.Invoke("getData", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getDataAsync() {
            this.getDataAsync(null);
        }
        
        /// <remarks/>
        public void getDataAsync(object userState) {
            if ((this.getDataOperationCompleted == null)) {
                this.getDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataOperationCompleted);
            }
            this.InvokeAsync("getData", new object[0], this.getDataOperationCompleted, userState);
        }
        
        private void OngetDataOperationCompleted(object arg) {
            if ((this.getDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataCompleted(this, new getDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getHashcode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long getHashcode() {
            object[] results = this.Invoke("getHashcode", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void getHashcodeAsync() {
            this.getHashcodeAsync(null);
        }
        
        /// <remarks/>
        public void getHashcodeAsync(object userState) {
            if ((this.getHashcodeOperationCompleted == null)) {
                this.getHashcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHashcodeOperationCompleted);
            }
            this.InvokeAsync("getHashcode", new object[0], this.getHashcodeOperationCompleted, userState);
        }
        
        private void OngetHashcodeOperationCompleted(object arg) {
            if ((this.getHashcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHashcodeCompleted(this, new getHashcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HeartBit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] HeartBit([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            object[] results = this.Invoke("HeartBit", new object[] {
                        data});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void HeartBitAsync(byte[] data) {
            this.HeartBitAsync(data, null);
        }
        
        /// <remarks/>
        public void HeartBitAsync(byte[] data, object userState) {
            if ((this.HeartBitOperationCompleted == null)) {
                this.HeartBitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHeartBitOperationCompleted);
            }
            this.InvokeAsync("HeartBit", new object[] {
                        data}, this.HeartBitOperationCompleted, userState);
        }
        
        private void OnHeartBitOperationCompleted(object arg) {
            if ((this.HeartBitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HeartBitCompleted(this, new HeartBitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UPLOADFILEEX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tcp_Models UPLOADFILEEX([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string path) {
            object[] results = this.Invoke("UPLOADFILEEX", new object[] {
                        data,
                        path});
            return ((Tcp_Models)(results[0]));
        }
        
        /// <remarks/>
        public void UPLOADFILEEXAsync(byte[] data, string path) {
            this.UPLOADFILEEXAsync(data, path, null);
        }
        
        /// <remarks/>
        public void UPLOADFILEEXAsync(byte[] data, string path, object userState) {
            if ((this.UPLOADFILEEXOperationCompleted == null)) {
                this.UPLOADFILEEXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUPLOADFILEEXOperationCompleted);
            }
            this.InvokeAsync("UPLOADFILEEX", new object[] {
                        data,
                        path}, this.UPLOADFILEEXOperationCompleted, userState);
        }
        
        private void OnUPLOADFILEEXOperationCompleted(object arg) {
            if ((this.UPLOADFILEEXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UPLOADFILEEXCompleted(this, new UPLOADFILEEXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UPLOADFILE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tcp_Models UPLOADFILE([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string seq) {
            object[] results = this.Invoke("UPLOADFILE", new object[] {
                        data,
                        seq});
            return ((Tcp_Models)(results[0]));
        }
        
        /// <remarks/>
        public void UPLOADFILEAsync(byte[] data, string seq) {
            this.UPLOADFILEAsync(data, seq, null);
        }
        
        /// <remarks/>
        public void UPLOADFILEAsync(byte[] data, string seq, object userState) {
            if ((this.UPLOADFILEOperationCompleted == null)) {
                this.UPLOADFILEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUPLOADFILEOperationCompleted);
            }
            this.InvokeAsync("UPLOADFILE", new object[] {
                        data,
                        seq}, this.UPLOADFILEOperationCompleted, userState);
        }
        
        private void OnUPLOADFILEOperationCompleted(object arg) {
            if ((this.UPLOADFILECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UPLOADFILECompleted(this, new UPLOADFILECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/downFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tcp_Models downFile(Tcp_Models tmodel) {
            object[] results = this.Invoke("downFile", new object[] {
                        tmodel});
            return ((Tcp_Models)(results[0]));
        }
        
        /// <remarks/>
        public void downFileAsync(Tcp_Models tmodel) {
            this.downFileAsync(tmodel, null);
        }
        
        /// <remarks/>
        public void downFileAsync(Tcp_Models tmodel, object userState) {
            if ((this.downFileOperationCompleted == null)) {
                this.downFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownFileOperationCompleted);
            }
            this.InvokeAsync("downFile", new object[] {
                        tmodel}, this.downFileOperationCompleted, userState);
        }
        
        private void OndownFileOperationCompleted(object arg) {
            if ((this.downFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.downFileCompleted(this, new downFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PRINTBINUPLOAD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tcp_Models PRINTBINUPLOAD(Tcp_Models tmodel) {
            object[] results = this.Invoke("PRINTBINUPLOAD", new object[] {
                        tmodel});
            return ((Tcp_Models)(results[0]));
        }
        
        /// <remarks/>
        public void PRINTBINUPLOADAsync(Tcp_Models tmodel) {
            this.PRINTBINUPLOADAsync(tmodel, null);
        }
        
        /// <remarks/>
        public void PRINTBINUPLOADAsync(Tcp_Models tmodel, object userState) {
            if ((this.PRINTBINUPLOADOperationCompleted == null)) {
                this.PRINTBINUPLOADOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPRINTBINUPLOADOperationCompleted);
            }
            this.InvokeAsync("PRINTBINUPLOAD", new object[] {
                        tmodel}, this.PRINTBINUPLOADOperationCompleted, userState);
        }
        
        private void OnPRINTBINUPLOADOperationCompleted(object arg) {
            if ((this.PRINTBINUPLOADCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PRINTBINUPLOADCompleted(this, new PRINTBINUPLOADCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PRINTBINDOWNLOAD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Tcp_Models PRINTBINDOWNLOAD(Tcp_Models tmodel) {
            object[] results = this.Invoke("PRINTBINDOWNLOAD", new object[] {
                        tmodel});
            return ((Tcp_Models)(results[0]));
        }
        
        /// <remarks/>
        public void PRINTBINDOWNLOADAsync(Tcp_Models tmodel) {
            this.PRINTBINDOWNLOADAsync(tmodel, null);
        }
        
        /// <remarks/>
        public void PRINTBINDOWNLOADAsync(Tcp_Models tmodel, object userState) {
            if ((this.PRINTBINDOWNLOADOperationCompleted == null)) {
                this.PRINTBINDOWNLOADOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPRINTBINDOWNLOADOperationCompleted);
            }
            this.InvokeAsync("PRINTBINDOWNLOAD", new object[] {
                        tmodel}, this.PRINTBINDOWNLOADOperationCompleted, userState);
        }
        
        private void OnPRINTBINDOWNLOADOperationCompleted(object arg) {
            if ((this.PRINTBINDOWNLOADCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PRINTBINDOWNLOADCompleted(this, new PRINTBINDOWNLOADCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisteCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisteCheck() {
            object[] results = this.Invoke("RegisteCheck", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisteCheckAsync() {
            this.RegisteCheckAsync(null);
        }
        
        /// <remarks/>
        public void RegisteCheckAsync(object userState) {
            if ((this.RegisteCheckOperationCompleted == null)) {
                this.RegisteCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisteCheckOperationCompleted);
            }
            this.InvokeAsync("RegisteCheck", new object[0], this.RegisteCheckOperationCompleted, userState);
        }
        
        private void OnRegisteCheckOperationCompleted(object arg) {
            if ((this.RegisteCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisteCheckCompleted(this, new RegisteCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getClientCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getClientCount() {
            object[] results = this.Invoke("getClientCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getClientCountAsync() {
            this.getClientCountAsync(null);
        }
        
        /// <remarks/>
        public void getClientCountAsync(object userState) {
            if ((this.getClientCountOperationCompleted == null)) {
                this.getClientCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientCountOperationCompleted);
            }
            this.InvokeAsync("getClientCount", new object[0], this.getClientCountOperationCompleted, userState);
        }
        
        private void OngetClientCountOperationCompleted(object arg) {
            if ((this.getClientCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientCountCompleted(this, new getClientCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getClientRegisteCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getClientRegisteCount() {
            object[] results = this.Invoke("getClientRegisteCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getClientRegisteCountAsync() {
            this.getClientRegisteCountAsync(null);
        }
        
        /// <remarks/>
        public void getClientRegisteCountAsync(object userState) {
            if ((this.getClientRegisteCountOperationCompleted == null)) {
                this.getClientRegisteCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientRegisteCountOperationCompleted);
            }
            this.InvokeAsync("getClientRegisteCount", new object[0], this.getClientRegisteCountOperationCompleted, userState);
        }
        
        private void OngetClientRegisteCountOperationCompleted(object arg) {
            if ((this.getClientRegisteCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientRegisteCountCompleted(this, new getClientRegisteCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getpch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getpch() {
            object[] results = this.Invoke("getpch", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getpchAsync() {
            this.getpchAsync(null);
        }
        
        /// <remarks/>
        public void getpchAsync(object userState) {
            if ((this.getpchOperationCompleted == null)) {
                this.getpchOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetpchOperationCompleted);
            }
            this.InvokeAsync("getpch", new object[0], this.getpchOperationCompleted, userState);
        }
        
        private void OngetpchOperationCompleted(object arg) {
            if ((this.getpchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getpchCompleted(this, new getpchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getye", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getye(string sql) {
            object[] results = this.Invoke("getye", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getyeAsync(string sql) {
            this.getyeAsync(sql, null);
        }
        
        /// <remarks/>
        public void getyeAsync(string sql, object userState) {
            if ((this.getyeOperationCompleted == null)) {
                this.getyeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetyeOperationCompleted);
            }
            this.InvokeAsync("getye", new object[] {
                        sql}, this.getyeOperationCompleted, userState);
        }
        
        private void OngetyeOperationCompleted(object arg) {
            if ((this.getyeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getyeCompleted(this, new getyeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/submsgtoserver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string submsgtoserver(string sql) {
            object[] results = this.Invoke("submsgtoserver", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submsgtoserverAsync(string sql) {
            this.submsgtoserverAsync(sql, null);
        }
        
        /// <remarks/>
        public void submsgtoserverAsync(string sql, object userState) {
            if ((this.submsgtoserverOperationCompleted == null)) {
                this.submsgtoserverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmsgtoserverOperationCompleted);
            }
            this.InvokeAsync("submsgtoserver", new object[] {
                        sql}, this.submsgtoserverOperationCompleted, userState);
        }
        
        private void OnsubmsgtoserverOperationCompleted(object arg) {
            if ((this.submsgtoserverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submsgtoserverCompleted(this, new submsgtoserverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getpchDirect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getpchDirect() {
            object[] results = this.Invoke("getpchDirect", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getpchDirectAsync() {
            this.getpchDirectAsync(null);
        }
        
        /// <remarks/>
        public void getpchDirectAsync(object userState) {
            if ((this.getpchDirectOperationCompleted == null)) {
                this.getpchDirectOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetpchDirectOperationCompleted);
            }
            this.InvokeAsync("getpchDirect", new object[0], this.getpchDirectOperationCompleted, userState);
        }
        
        private void OngetpchDirectOperationCompleted(object arg) {
            if ((this.getpchDirectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getpchDirectCompleted(this, new getpchDirectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getyeDirect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getyeDirect(string sql) {
            object[] results = this.Invoke("getyeDirect", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getyeDirectAsync(string sql) {
            this.getyeDirectAsync(sql, null);
        }
        
        /// <remarks/>
        public void getyeDirectAsync(string sql, object userState) {
            if ((this.getyeDirectOperationCompleted == null)) {
                this.getyeDirectOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetyeDirectOperationCompleted);
            }
            this.InvokeAsync("getyeDirect", new object[] {
                        sql}, this.getyeDirectOperationCompleted, userState);
        }
        
        private void OngetyeDirectOperationCompleted(object arg) {
            if ((this.getyeDirectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getyeDirectCompleted(this, new getyeDirectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/submsgtoserverDirect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string submsgtoserverDirect(string sql) {
            object[] results = this.Invoke("submsgtoserverDirect", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submsgtoserverDirectAsync(string sql) {
            this.submsgtoserverDirectAsync(sql, null);
        }
        
        /// <remarks/>
        public void submsgtoserverDirectAsync(string sql, object userState) {
            if ((this.submsgtoserverDirectOperationCompleted == null)) {
                this.submsgtoserverDirectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmsgtoserverDirectOperationCompleted);
            }
            this.InvokeAsync("submsgtoserverDirect", new object[] {
                        sql}, this.submsgtoserverDirectOperationCompleted, userState);
        }
        
        private void OnsubmsgtoserverDirectOperationCompleted(object arg) {
            if ((this.submsgtoserverDirectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submsgtoserverDirectCompleted(this, new submsgtoserverDirectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3221.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Tcp_Models {
        
        private decimal tcpSendUserField;
        
        private string[] reciveUserField;
        
        private string tcpContentField;
        
        private string[] onlineUserListField;
        
        private System.DateTime sendTimeField;
        
        private string opKeyField;
        
        private string upfilePathField;
        
        private byte[] fileDataField;
        
        private string fileTypeField;
        
        private string fileSeqField;
        
        /// <remarks/>
        public decimal TcpSendUser {
            get {
                return this.tcpSendUserField;
            }
            set {
                this.tcpSendUserField = value;
            }
        }
        
        /// <remarks/>
        public string[] ReciveUser {
            get {
                return this.reciveUserField;
            }
            set {
                this.reciveUserField = value;
            }
        }
        
        /// <remarks/>
        public string TcpContent {
            get {
                return this.tcpContentField;
            }
            set {
                this.tcpContentField = value;
            }
        }
        
        /// <remarks/>
        public string[] OnlineUserList {
            get {
                return this.onlineUserListField;
            }
            set {
                this.onlineUserListField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SendTime {
            get {
                return this.sendTimeField;
            }
            set {
                this.sendTimeField = value;
            }
        }
        
        /// <remarks/>
        public string OpKey {
            get {
                return this.opKeyField;
            }
            set {
                this.opKeyField = value;
            }
        }
        
        /// <remarks/>
        public string UpfilePath {
            get {
                return this.upfilePathField;
            }
            set {
                this.upfilePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileData {
            get {
                return this.fileDataField;
            }
            set {
                this.fileDataField = value;
            }
        }
        
        /// <remarks/>
        public string FileType {
            get {
                return this.fileTypeField;
            }
            set {
                this.fileTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FileSeq {
            get {
                return this.fileSeqField;
            }
            set {
                this.fileSeqField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteQueryTexCompletedEventHandler(object sender, ExcuteQueryTexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteQueryTexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteQueryTexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteQuerySqlServerCompletedEventHandler(object sender, ExcuteQuerySqlServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteQuerySqlServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteQuerySqlServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteGerCompletedEventHandler(object sender, ExcuteGerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteGerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteGerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SQLSExcuteCompletedEventHandler(object sender, SQLSExcuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SQLSExcuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SQLSExcuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteQueryExCompletedEventHandler(object sender, ExcuteQueryExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteQueryExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteQueryExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteQueryExTexCompletedEventHandler(object sender, ExcuteQueryExTexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteQueryExTexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteQueryExTexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteOperationCompletedEventHandler(object sender, ExcuteOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteOperationTexCompletedEventHandler(object sender, ExcuteOperationTexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteOperationTexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteOperationTexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteOperationExCompletedEventHandler(object sender, ExcuteOperationExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteOperationExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteOperationExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteOperationExTexCompletedEventHandler(object sender, ExcuteOperationExTexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteOperationExTexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteOperationExTexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExecuteDataBaseBLOBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExecuteDataBaseBLOBTexCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteProcCompletedEventHandler(object sender, ExcuteProcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteProcTexCompletedEventHandler(object sender, ExcuteProcTexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteProcTexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteProcTexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCountCompletedEventHandler(object sender, GetCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCountTexCompletedEventHandler(object sender, GetCountTexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountTexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountTexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCountSqlServerCompletedEventHandler(object sender, GetCountSqlServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountSqlServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountSqlServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CreateErrorDOCCompletedEventHandler(object sender, CreateErrorDOCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateErrorDOCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateErrorDOCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CreateErrorDOCTexCompletedEventHandler(object sender, CreateErrorDOCTexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateErrorDOCTexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateErrorDOCTexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteProcEXCompletedEventHandler(object sender, ExcuteProcEXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteProcEXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteProcEXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteProcEXTexCompletedEventHandler(object sender, ExcuteProcEXTexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteProcEXTexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteProcEXTexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteProcEXTexlockCompletedEventHandler(object sender, ExcuteProcEXTexlockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteProcEXTexlockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteProcEXTexlockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteThreadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getSMSStockCompletedEventHandler(object sender, getSMSStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSMSStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSMSStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void FetchSMSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getFilePathHeaCompletedEventHandler(object sender, getFilePathHeaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFilePathHeaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFilePathHeaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getVersionInfoCompletedEventHandler(object sender, getVersionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVersionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVersionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateVersionInfoCompletedEventHandler(object sender, UpdateVersionInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVersionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVersionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getUpdateFileListCompletedEventHandler(object sender, getUpdateFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUpdateFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUpdateFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CreateUpdateFolderCompletedEventHandler(object sender, CreateUpdateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUpdateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUpdateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InCodeCompletedEventHandler(object sender, InCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UnCodeCompletedEventHandler(object sender, UnCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ExcuteSDPQCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void ClientStaticExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getDataCompletedEventHandler(object sender, getDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getHashcodeCompletedEventHandler(object sender, getHashcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHashcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHashcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void HeartBitCompletedEventHandler(object sender, HeartBitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HeartBitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HeartBitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UPLOADFILEEXCompletedEventHandler(object sender, UPLOADFILEEXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UPLOADFILEEXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UPLOADFILEEXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tcp_Models Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tcp_Models)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UPLOADFILECompletedEventHandler(object sender, UPLOADFILECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UPLOADFILECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UPLOADFILECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tcp_Models Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tcp_Models)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void downFileCompletedEventHandler(object sender, downFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class downFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal downFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tcp_Models Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tcp_Models)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PRINTBINUPLOADCompletedEventHandler(object sender, PRINTBINUPLOADCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PRINTBINUPLOADCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PRINTBINUPLOADCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tcp_Models Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tcp_Models)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void PRINTBINDOWNLOADCompletedEventHandler(object sender, PRINTBINDOWNLOADCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PRINTBINDOWNLOADCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PRINTBINDOWNLOADCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Tcp_Models Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Tcp_Models)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RegisteCheckCompletedEventHandler(object sender, RegisteCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisteCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisteCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getClientCountCompletedEventHandler(object sender, getClientCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getClientRegisteCountCompletedEventHandler(object sender, getClientRegisteCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientRegisteCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientRegisteCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getpchCompletedEventHandler(object sender, getpchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getpchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getpchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getyeCompletedEventHandler(object sender, getyeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getyeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getyeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void submsgtoserverCompletedEventHandler(object sender, submsgtoserverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submsgtoserverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submsgtoserverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getpchDirectCompletedEventHandler(object sender, getpchDirectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getpchDirectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getpchDirectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void getyeDirectCompletedEventHandler(object sender, getyeDirectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getyeDirectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getyeDirectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void submsgtoserverDirectCompletedEventHandler(object sender, submsgtoserverDirectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submsgtoserverDirectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submsgtoserverDirectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591